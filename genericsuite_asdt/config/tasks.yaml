feature_addition_task:
  description: >
    Depending on the requirements, create, add a new feature, modify an existing feature, and/or remove a feature from the software project.
    If it's a new feature addition, ensure the feature is well-integrated with the existing codebase, write appropriate tests, and provide necessary documentation.
    The current date is {current_date}.
    The requirement for this task is:
    ```
    {project}
    ```
  expected_output: 'A well-implemented feature, fully tested, and documented.'
  agent: senior_software_engineer
  human_input: True

bug_fixing_task:
  description: >
    Identify and resolve errors in the software. Focus on fixing bugs and improving
    code efficiency. Document all changes and create corresponding test cases.
    The details about what is being done are in the context.
    The current date is {current_date}.
  expected_output: 'Clean, error-free code with tests that confirm the fixes.'
  agent: software_quality_engineer
  context: [feature_addition_task]

testing_task:
  description: >
    Develop and run a comprehensive set of unit and integration tests for the software.
    Ensure code coverage and robustness for all features.
    The details about what is being done are in the context.
    The current date is {current_date}.
  expected_output: 'A full test suite with high coverage and a report on test results.'
  agent: test_engineer
  context: [feature_addition_task]

frontend_development_task:
  description: >
    Develop the frontend for the project using JavaScript, ReactJS, HTML, and CSS.
    Ensure responsiveness, accessibility, and a seamless user experience.
    The details about what is being done are in the context.
    The current date is {current_date}.
  expected_output: "code files with fully functional and -if it's the case- visually appealing frontend."
  agent: frontend_developer
  context: [feature_addition_task]

backend_development_task:
  description: >
    Develop the backend APIs and logic using Python. Ensure scalability, maintainability,
    and performance of the server-side logic. Integrate it seamlessly with the frontend.
    The details about what is being done are in the context.
    The current date is {current_date}.
  expected_output: 'code files with a fully functional and tested backend API with proper documentation.'
  agent: backend_developer
  context: [feature_addition_task]

devops_task:
  description: >
    Set up CI/CD pipelines using GitHub Actions. Use Docker for containerization,
    and Terraform to manage the infrastructure. Ensure the application runs smoothly
    on AWS, GCP, and Azure platforms.
    The details about what is being done are in the context.
    The current date is {current_date}.
  expected_output: 'A fully configured CI/CD pipeline and infrastructure setup across multiple clouds.'
  agent: devops_specialist
  context: [feature_addition_task]

ui_ux_task:
  description: >
    Design the UI/UX of the application. Create wireframes, mockups, and a prototype that
    ensures a seamless and aesthetically pleasing user experience.
    The details about what is being done are in the context.
    The current date is {current_date}.
  expected_output: 'A complete UI/UX design including wireframes, mockups, and a user-friendly prototype.'
  agent: ui_ux_specialist
  context: [feature_addition_task]

final_report:
  description: >
    Review the context you got, gather all task results and generated code, and present it in a final report.
    Make sure the report is detailed and contains any and all relevant information.
  expected_output: >
    A fully fledge reports with the mains topics, each with a full section of information.
    Formatted as markdown, and present the eventual code with '```'
  agent: senior_software_engineer
